{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:eslint-plugin/recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier",
        "plugin:prettier/recommended",
        "plugin:react-redux/recommended",
        "plugin:react-hooks/recommended",
        "plugin:react/jsx-runtime" 

    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {},
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "eslint-comments",
        "eslint-plugin",
        "import",
        "simple-import-sort",
        "react",
        "react-hooks",
        "prettier",
        "react-redux"
    ],
    "rules": {
        "max-len": [
            "error",
            {
                "code": 120,
                "tabWidth": 2
            }
        ],
        "no-trailing-spaces": "error",
        "key-spacing": [
            "error",
            {
                "afterColon": true
            }
        ],
        "no-multi-spaces": "error",
        "react/react-in-jsx-scope": "off",
        "camelcase": "error",
        "spaced-comment": "error",
        "quotes": [
            "error",
            "single"
        ],
        "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface"
        ],
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "disallowTypeAnnotations": true
            }
        ],
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-function": [
            "error",
            {
                "allow": [
                    "arrowFunctions"
                ]
            }
        ],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "varsIgnorePattern": "^_",
                "argsIgnorePattern": "^_"
            }
        ],
        // disallow non-import statements appearing before import statements
        "import/first": "error",
        // Require a newline after the last import/require in a group
        "import/newline-after-import": "error",
        // Forbid import of modules using absolute paths
        "import/no-absolute-path": "error",
        // disallow AMD require/define
        "import/no-amd": "error",
        // forbid default exports - we want to standardize on named exports so that imported names are consistent
        "import/no-default-export": "error",
        // disallow imports from duplicate paths
        "import/no-duplicates": "error",
        // Forbid mutable exports
        "import/no-mutable-exports": "error",
        // Prevent importing the default as if it were named
        "import/no-named-default": "error",
        // Prohibit named exports
        "import/no-named-export": "off", // we want everything to be a named export
        // Forbid a module from importing itself
        "import/no-self-import": "error",
        // Require modules with a single export to use a default export
        "import/prefer-default-export": "off", // we want everything to be named
        // enforce a sort order across the codebase
        "simple-import-sort/imports": "error",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
    },
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        },
        "react": {
            "version": "detect",
        },
    }
}